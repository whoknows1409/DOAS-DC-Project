spring:
  config:
    activate:
      on-profile: docker
  main:
    allow-circular-references: true
  
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:auctiondb}
    username: ${DB_USER:auctionuser}
    password: ${DB_PASSWORD:auctionpass}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
      shutdown-timeout: 100ms

logging:
  level:
    com.auction.system: INFO
    org.springframework.web.socket: INFO
    org.hibernate.SQL: WARN
    com.zaxxer.hikari: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/auction-system.log
    max-size: 100MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    max-connections: 8192

file:
  upload-dir: /app/uploads

app:
  server:
    id: ${SERVER_ID:1}
    rmi:
      port: ${RMI_PORT:1101}
    peers: ${PEER_SERVERS:localhost:1102}
  
  coordination:
    heartbeat:
      interval: 5000
      timeout: 15000
    election:
      timeout: 10000
    replication:
      factor: 3
      timeout: 5000
      retry-attempts: 3