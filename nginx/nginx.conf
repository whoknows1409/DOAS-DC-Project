events {
    worker_connections 1024;
}

http {
    # File upload settings
    client_max_body_size 10M;
    client_body_buffer_size 10M;
    
    upstream auction_servers {
        least_conn;
        server auction-server-1:8081 max_fails=3 fail_timeout=30s;
        server auction-server-2:8082 max_fails=3 fail_timeout=30s;
        server auction-server-3:8083 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name localhost;

        # Frontend static files
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Uploaded files - serve directly from Nginx
        location /uploads/ {
            alias /app/uploads/;
            autoindex off;
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # Security headers
            add_header X-Content-Type-Options nosniff;
            
            # Allow CORS for images
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            
            # Serve only image files
            location ~ \.(jpg|jpeg|png|gif|webp|svg)$ {
                try_files $uri =404;
            }
        }

        # API proxy to backend servers
        location /api/ {
            proxy_pass http://auction_servers/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # File upload support
            client_max_body_size 10M;
            client_body_buffer_size 10M;
            proxy_request_buffering off;
            
            # Timeouts for large uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # WebSocket endpoint
        location /ws/ {
            proxy_pass http://auction_servers/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}